1)import pandas as pd
import numpy as np
df=pd.read_csv(r'https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/Movies%20Recommendation.csv')
df.head()




2)df.info()
df.shape
df.columns

3)df_features=df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna(' ')

4)df_features.shape

5)df_features


6)x=df_features['Movie_Genre']+' '+df_features['Movie_Keywords']+' '+df_features['Movie_Tagline']+' '+df_features['Movie_Cast']+' '+df_features['Movie_Director']
x.shape

7)from sklearn.feature_extraction.text import TfidfVectorizer
tfidf =TfidfVectorizer()
X=tfidf.fit_transform(x)

8)X.shape
print(X)


9)from sklearn.metrics.pairwise import cosine_similarity
Similarity_Score=cosine_similarity(X)
Similarity_Score

10)Similarity_Score.shape

11)Favourite_Movie_Name=input( "Enter your favourite movie name:")
All_Movies_Title_List = df['Movie_Title'].tolist()


12)import difflib
Movie_Recommendation=difflib.get_close_matches(Favourite_Movie_Name, All_Movies_Title_List)
print(Movie_Recommendation)

13)Close_Match=Movie_Recommendation[0]
print(Close_Match)



14)Index_of_Close_Match_Movie= df[df.Movie_Title==Close_Match] ['Movie_ID'].values[0]
print(Index_of_Close_Match_Movie)

15)Recommendation_Score=list(enumerate(Similarity_Score[Index_of_Close_Match_Movie]))
print(Recommendation_Score)
len(Recommendation_Score)

16)Sorted_Similar_Movies=sorted(Recommendation_Score, key=lambda x:x[1], reverse= True)
print(Sorted_Similar_Movies)

17)print('Top 30 Movies Suggested for You: \n')

i=1

for movie in Sorted_Similar_Movies:

  index=movie[0]

  title_from_index=df[df.index==index]['Movie_Title'].values[0]

  if(i<31):

    print(i,'.',title_from_index)
    i+=1









TOP 10 MOVIE RECCOMMENDATION

18)Movie_Name=input(' Enter your favourite movie name:')

list_of_all_titles=df['Movie_Title'].tolist()

Find_Close_Match= difflib.get_close_matches(Movie_Name, list_of_all_titles)

Close_Match=Find_Close_Match[0]

Index_of_Movie=df[df.Movie_Title==Close_Match] ['Movie_ID'].values[0]

Recommendation_Score=list(enumerate(Similarity_Score[Index_of_Movie]))

sorted_similar_movies=sorted(Recommendation_Score, key=lambda x:x[1], reverse=True)

print("Top 10 Movies suggested for you: \n")
i=1

for movie in sorted_similar_movies:

  index=movie[0]

  title_from_index=df[df.Movie_ID==index]['Movie_Title'].values

  if (i<11):

    print(i, '.',title_from_index)

    i+=1

